[
  {
    "sha": "b4265d5431c2b7da40a58d96eff0e29ec15208af",
    "node_id": "C_kwDODw8UQdoAKGI0MjY1ZDU0MzFjMmI3ZGE0MGE1OGQ5NmVmZjBlMjllYzE1MjA4YWY",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:52:13Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:52:13Z"
      },
      "message": "**Beartype 0.18.3** started.",
      "tree": {
        "sha": "96eac8735c23ae5974874bad805ac35b62eb8dcc",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/96eac8735c23ae5974874bad805ac35b62eb8dcc"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/b4265d5431c2b7da40a58d96eff0e29ec15208af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/b4265d5431c2b7da40a58d96eff0e29ec15208af",
    "html_url": "https://github.com/beartype/beartype/commit/b4265d5431c2b7da40a58d96eff0e29ec15208af",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/b4265d5431c2b7da40a58d96eff0e29ec15208af/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5216017e2b076a36ae9a73a260d1c1e97f6780ac",
        "url": "https://api.github.com/repos/beartype/beartype/commits/5216017e2b076a36ae9a73a260d1c1e97f6780ac",
        "html_url": "https://github.com/beartype/beartype/commit/5216017e2b076a36ae9a73a260d1c1e97f6780ac"
      }
    ]
  },
  {
    "sha": "5216017e2b076a36ae9a73a260d1c1e97f6780ac",
    "node_id": "C_kwDODw8UQdoAKDUyMTYwMTdlMmIwNzZhMzZhZTlhNzNhMjYwZDFjMWU5N2Y2NzgwYWM",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:49:21Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:49:21Z"
      },
      "message": "Beartype 0.18.2: Now With Even Less Broky\n\nMuch like your neighbour's obese cat, even @beartype 0.18.1 didn't quite work out as expected. This patch release temporarily squelches (i.e., silences) a low-level `assert` statement erroneously performed during @beartype's dynamic code generation loop. Is this the end to the horror show that keeps on giving? Will the ill-fated @beartype 0.18.x release cycle finally pass muster and stop violating the world? Tune in next time as @leycec clutches his chest in agony live on GitHub.\n\nObligatory awesome peeps!\n\n## GitHub Sponsors: They Scratch the Bear's Back. Now, The Bear Scratches Back.\n\nThis release comes courtesy these proud [GitHub Sponsors](https://github.com/sponsors/leycec), without whom @leycec's cats would currently be eating grasshoppers:\n\n* @sesco-llc (SESCO Enterprises), \"The Power of Innovation in Trading\": <sup>*this inspires me to get out of the house and do something*</sup>\n  https://sescollc.com\n* @DylanModesitt (Dylan Modesitt), quantitative strategies energy trading associate: <sup>*...wikipedia, don't fail me now!*</sup>\n  https://dylanmodesitt.com\n\nThanks so much, masters of fintech.\n\n![](https://media1.tenor.com/m/7JR7sD8oTiUAAAAC/who-are-you-do-i-know-you.gif)\n<sup>The Masters of Fintech. *That's who.*</sup>",
      "tree": {
        "sha": "1dc028b607159d131253c18447e5b74dbf8aac21",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/1dc028b607159d131253c18447e5b74dbf8aac21"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/5216017e2b076a36ae9a73a260d1c1e97f6780ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/5216017e2b076a36ae9a73a260d1c1e97f6780ac",
    "html_url": "https://github.com/beartype/beartype/commit/5216017e2b076a36ae9a73a260d1c1e97f6780ac",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/5216017e2b076a36ae9a73a260d1c1e97f6780ac/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de3f94d5ec323869a30b14402b8c6dca8004baed",
        "url": "https://api.github.com/repos/beartype/beartype/commits/de3f94d5ec323869a30b14402b8c6dca8004baed",
        "html_url": "https://github.com/beartype/beartype/commit/de3f94d5ec323869a30b14402b8c6dca8004baed"
      }
    ]
  },
  {
    "sha": "de3f94d5ec323869a30b14402b8c6dca8004baed",
    "node_id": "C_kwDODw8UQdoAKGRlM2Y5NGQ1ZWMzMjM4NjlhMzBiMTQ0MDJiOGM2ZGNhODAwNGJhZWQ",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:44:59Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:44:59Z"
      },
      "message": "Obscure code generation assertion squelched.\n\nThis commit squelches (i.e., silences) a low-level `assert` statement\nerroneously performed during @beartype's dynamic code generation loop,\nresolving issue #352 kindly submitted by NES Zelda master @rbroderi.\n(*Sworn to dastardly Master Swords!*)",
      "tree": {
        "sha": "1dc028b607159d131253c18447e5b74dbf8aac21",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/1dc028b607159d131253c18447e5b74dbf8aac21"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/de3f94d5ec323869a30b14402b8c6dca8004baed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/de3f94d5ec323869a30b14402b8c6dca8004baed",
    "html_url": "https://github.com/beartype/beartype/commit/de3f94d5ec323869a30b14402b8c6dca8004baed",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/de3f94d5ec323869a30b14402b8c6dca8004baed/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b",
        "url": "https://api.github.com/repos/beartype/beartype/commits/a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b",
        "html_url": "https://github.com/beartype/beartype/commit/a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b"
      }
    ]
  },
  {
    "sha": "a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b",
    "node_id": "C_kwDODw8UQdoAKGE0NTg2NjhhMzlhN2ZjYmMxZTQwY2U1Y2UxZGZhMDJhZmI5YmQ5MGI",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:19:53Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:19:53Z"
      },
      "message": "**Beartype 0.18.2** started.",
      "tree": {
        "sha": "91ca36ae8cb79e312c05a236d0d53cd0921e2b5f",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/91ca36ae8cb79e312c05a236d0d53cd0921e2b5f"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b",
    "html_url": "https://github.com/beartype/beartype/commit/a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/a458668a39a7fcbc1e40ce5ce1dfa02afb9bd90b/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "acfcaef90eaef5207cc71231c2b83d497fe6c34e",
        "url": "https://api.github.com/repos/beartype/beartype/commits/acfcaef90eaef5207cc71231c2b83d497fe6c34e",
        "html_url": "https://github.com/beartype/beartype/commit/acfcaef90eaef5207cc71231c2b83d497fe6c34e"
      }
    ]
  },
  {
    "sha": "acfcaef90eaef5207cc71231c2b83d497fe6c34e",
    "node_id": "C_kwDODw8UQdoAKGFjZmNhZWY5MGVhZWY1MjA3Y2M3MTIzMWMyYjgzZDQ5N2ZlNmMzNGU",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:11:31Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T07:11:31Z"
      },
      "message": "Beartype 0.18.1: Now With Less Broky\n\nMuch like your neighbour's obese cat, @beartype 0.18.0 didn't quite work\nout as expected. This patch release temporarily reverts **default value\ntype-checking** (i.e., type-checking of default values of optional\nparameters annotated by type hints accepted by `@beartype`-decorated\ncallables), restoring sanity to the downstream community of @beartype\nconsumers.\n\nAlthough desirable, this functionality is also *a lot* more nuanced than\n@leycec previously assumed -- resulting in @leycec clutching his bald\nhead as if he still had something to clutch there. Since improving this\nfunctionality to be robust against breakage is non-trivial, the proper\nsolution is to temporarily disable that functionality. Thus, we cry.\n\nObligatory awesome peeps!\n\n## GitHub Sponsors: They Scratch the Bear's Back. Now, The Bear Scratches Back.\n\nThis release comes courtesy these proud [GitHub Sponsors](https://github.com/sponsors/leycec), without whom @leycec's cats would currently be eating grasshoppers:\n\n* @sesco-llc (SESCO Enterprises), \"The Power of Innovation in Trading\": <sup>*this inspires me to get out of the house and do something*</sup>\n  https://sescollc.com\n* @DylanModesitt (Dylan Modesitt), quantitative strategies energy trading associate: <sup>*...wikipedia, don't fail me now!*</sup>\n  https://dylanmodesitt.com\n\nThanks so much, masters of fintech.\n\n![](https://media1.tenor.com/m/7JR7sD8oTiUAAAAC/who-are-you-do-i-know-you.gif)\n<sup>The Masters of Fintech. *That's who.*</sup>",
      "tree": {
        "sha": "91ca36ae8cb79e312c05a236d0d53cd0921e2b5f",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/91ca36ae8cb79e312c05a236d0d53cd0921e2b5f"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/acfcaef90eaef5207cc71231c2b83d497fe6c34e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/acfcaef90eaef5207cc71231c2b83d497fe6c34e",
    "html_url": "https://github.com/beartype/beartype/commit/acfcaef90eaef5207cc71231c2b83d497fe6c34e",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/acfcaef90eaef5207cc71231c2b83d497fe6c34e/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b4976a5964e8d794a3f978f9664dbbfce9eb1bb",
        "url": "https://api.github.com/repos/beartype/beartype/commits/7b4976a5964e8d794a3f978f9664dbbfce9eb1bb",
        "html_url": "https://github.com/beartype/beartype/commit/7b4976a5964e8d794a3f978f9664dbbfce9eb1bb"
      }
    ]
  },
  {
    "sha": "7b4976a5964e8d794a3f978f9664dbbfce9eb1bb",
    "node_id": "C_kwDODw8UQdoAKDdiNDk3NmE1OTY0ZThkNzk0YTNmOTc4Zjk2NjRkYmJmY2U5ZWIxYmI",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T06:59:50Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-03T06:59:50Z"
      },
      "message": "Parameter default type-checking reversion.\n\nThis commit temporarily reverts the prior commit chain type-checking the\ndefault values of optional parameters accepted by `@beartype`-decorated\ncallables, resolving issue #354 kindly submitted by the\nMinos-labyrinth-projected-onto-a-tesseract @rbnhd (Vikram Kushwaha)\n*and* re-opening feature request #154 kindly submitted by @dosisod\n(Logan Hunt) a literal lifetime ago when @leycec still had hair.\nAlthough highly desirable, this functionality is also considerably more\nnuanced than @leycec previously assumed -- resulting in widespread\nbreakage throughout the downstream ecosystem of @beartype consumers.\nThat's demonstrably awful. Since properly improving this functionality\nto be robust against that breakage is non-trivial, the proper solution\nis simply to temporarily disable that functionality. Thus, we cry.\n(*Humorous hemorrhage or us!*)",
      "tree": {
        "sha": "91ca36ae8cb79e312c05a236d0d53cd0921e2b5f",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/91ca36ae8cb79e312c05a236d0d53cd0921e2b5f"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/7b4976a5964e8d794a3f978f9664dbbfce9eb1bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/7b4976a5964e8d794a3f978f9664dbbfce9eb1bb",
    "html_url": "https://github.com/beartype/beartype/commit/7b4976a5964e8d794a3f978f9664dbbfce9eb1bb",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/7b4976a5964e8d794a3f978f9664dbbfce9eb1bb/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b",
        "url": "https://api.github.com/repos/beartype/beartype/commits/cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b",
        "html_url": "https://github.com/beartype/beartype/commit/cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b"
      }
    ]
  },
  {
    "sha": "cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b",
    "node_id": "C_kwDODw8UQdoAKGNkY2NmZjhiY2MzYTVlOWNlZDRhY2NlY2Q3ZGI4OGY2MGE0YWM2MmI",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-02T08:01:14Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-02T08:01:14Z"
      },
      "message": "**Beartype 0.18.1** started.",
      "tree": {
        "sha": "a82bc5063774bf71331b64850bb32f82959d093a",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/a82bc5063774bf71331b64850bb32f82959d093a"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b",
    "html_url": "https://github.com/beartype/beartype/commit/cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/cdccff8bcc3a5e9ced4accecd7db88f60a4ac62b/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af99dfec2643ef4614fc07116a7048ac4153c0ce",
        "url": "https://api.github.com/repos/beartype/beartype/commits/af99dfec2643ef4614fc07116a7048ac4153c0ce",
        "html_url": "https://github.com/beartype/beartype/commit/af99dfec2643ef4614fc07116a7048ac4153c0ce"
      }
    ]
  },
  {
    "sha": "af99dfec2643ef4614fc07116a7048ac4153c0ce",
    "node_id": "C_kwDODw8UQdoAKGFmOTlkZmVjMjY0M2VmNDYxNGZjMDcxMTZhNzA0OGFjNDE1M2MwY2U",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-02T07:56:48Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-04-02T07:58:15Z"
      },
      "message": "Beartype 0.18.0: Dictionaries and Defaults at the Event Horizon of the Typing Hole\n\nBeartype 0.18.0 whimsically gyrates around in balloon pants while chanting: **\"Can't touch this.\"**\n\n![](https://media1.tenor.com/m/CutOLl72zOgAAAAC/one-punch-man-anime.gif)\n<sup>*...even the token bald man in a smoking post-apocalyptic wasteland doesn't know*</sup>\n\nIt's kinda creepy, honestly – and it's *really* getting on your nerves. Yes, we get it. You think you're hot junk, @beartype 0.18.0! Yet you can't help but admire the sweat that coats its body. Beartype 0.18.0 worked out for this release. It's buff now. It's tough now. It does things now. It does things you thought it did five years ago now. Beartype 0.18.0 finally caught up to your expectations. It even tried to exceed them. It didn't, of course. It couldn't. It's only a bear. It rarely bathes. And, anyway, your expectations were unreasonable.\n\nBut... *it almost did.* Prepare to have your expectations almost exceeded:\n\n```bash\npip install --upgrade beartype\n```\n\nBut what *is* @beartype 0.18.0? What does it do? Nuthing, huh? It's all just hollow hype and empty promises again, huh?\n\nTo answer that reasonable question, let's unreasonably back up with an extended monologue while the camera man slow pans across @leycec's baldpate. What was @beartype < 0.18.0? Why would anyone actually ~~suffer~~ install older @beartype releases? In the anachronistic words of an inconvenient acronym I just made up: **scientific quality assurance (SciQA).** So you wanna type-check...\n\n* **...tensors?** No problem-o. @beartype **+** @patrick-kidger's [`jaxtyping`](https://github.com/patrick-kidger/jaxtyping). :kissing_heart:\n* **...data frames?** Sounds good. @beartype **+** @cosmicBboy's [`pandera`](https://github.com/unionai-oss/pandera). :hugs:\n* **...literally anything else?** You can't. Good luck. Beartype wishes you well on your lonely descent into `typing` oblivion. :smiling_face_with_tear:\n\nWe're agreed that @beartype < 0.18.0 was limited in scope. If you fit inside that scope, your codebase fits inside a backpack. Congratulations. It pays to be lean. But what if you have a *real* codebase? What if you wanted to actually type-check general-purpose Python containers outside that scope?\n\n**You use @beartype 0.18.0!** That's right. We're *finally* type-checking general-purpose Python containers. But first...\n\n## A Bald Man in Yellow Tights Confronts a Murderous Cyborg Live on GitHub\n\nPrepare your battle-hardened body and soul for the epic maelstrom of delivered features that follows by [**watching this malicious YouTube video!**](https://www.youtube.com/watch?v=km2OPUctni4) Just kidding. It's wholesome. Really. It's [**Saitama vs. Genos**](https://www.youtube.com/watch?v=km2OPUctni4) – surely humanity's crowning achievement. Praise be to Arifumi Imai for he has seen the countenance of many small gods and found them all sadly lacking.\n\n@leycec always queues up [*Saitama vs. Genos*](https://www.youtube.com/watch?v=km2OPUctni4) when he needs to get hyped. Gonna groom the hair off a scary cat giving you the ugly fish-eyed thousand-yard death grimace? [*Saitama vs. Genos.*](https://www.youtube.com/watch?v=km2OPUctni4) Gonna remount your girlfriend's 64-core ThreadInfernoBurner CPU that's already sintered six motherboards into charred thermal paste in the wood shed out back that the sea walruses are rifling through? [*Saitama vs. Genos.*](https://www.youtube.com/watch?v=km2OPUctni4) When things get real, you just get realer. [*Saitama vs. Genos.*](https://www.youtube.com/watch?v=km2OPUctni4)\n\n![](https://media1.tenor.com/m/sAeah7B8i9UAAAAC/genos-saitama.gif)\n<sup>*when your shoulders rip off their hinges, you just hope that t-shirt was disposable*</sup>\n\nAnd now...\n\n## GitHub Sponsors: They Scratch the Bear's Back. Now, The Bear Scratches Back.\n\nThis release comes courtesy these proud [GitHub Sponsors](https://github.com/sponsors/leycec), without whom @leycec's cats would currently be eating grasshoppers:\n\n* @sesco-llc (SESCO Enterprises), \"The Power of Innovation in Trading\": <sup>*this inspires me to get out of the house and do something*</sup>\n  https://sescollc.com\n* @DylanModesitt (Dylan Modesitt), quantitative strategies energy trading associate: <sup>*...wikipedia, don't fail me now!*</sup>\n  https://dylanmodesitt.com\n\nThanks so much, masters of fintech.\n\n![](https://media1.tenor.com/m/7JR7sD8oTiUAAAAC/who-are-you-do-i-know-you.gif)\n<sup>The Masters of Fintech. *That's who.*</sup>\n\nAnd now... *the moment people I have never met have been waiting for.*\n\n## Dictionaries: The Mapping is Not the Territory, Whatever That Means\n\nBeartype 0.18.0 now **deeply type-checks** the **first key-value pair** of **each dictionary** (mapping) annotated by a dictionary (mapping) type hint in `O(1)` constant time with negligible constant factors. This means near-real-time with runtime overhead of at most ~1µs (i.e., one microsecond, one millionth of a second) per type-check. This includes *all* hints of the form:\n\n* `dict[..., ...]`.\n* `collections.defaultdict[..., ...]`.\n* `collections.abc.Mapping[..., ...]`.\n* `collections.abc.MutableMapping[..., ...]`.\n* `collections.abc.OrderedDict[..., ...]`.\n* `typing.DefaultDict[..., ...]`.\n* `typing.Dict[..., ...]`.\n* `typing.Mapping[..., ...]`.\n* `typing.MutableMapping[..., ...]`.\n* `typing.OrderedDict[..., ...]`.\n\nThis (*...probably*) also includes @wesselb's [multiple-dispatch *pièce de résistance* Plum](https://github.com/beartype/plum/), which should now automatically multiple-dispatch across different kinds of dictionaries without @wesselb actually having to do anything. Let us choose to believe this optimistic prophecy I have delivered.\n\nBeartype 0.18.0 does so (*...effectively*) recursively on arbitrarily nested combinations and permutations of those type hints. The proof is in the disgusting British blood pudding possibly named something like \"toad-in-the-bear-hole\":\n\n```python\nfrom beartype import beartype\nfrom collections.abc import Mapping, MutableMapping\n\n@beartype\ndef go_bear(bear_bros_for_life: dict[\n    int, Mapping[str, MutableMapping[bytes, bool]]]) -> None:\n    print(bear_bros_for_life)\n\n# This passes. A beautiful dictionary brings a tear to the eye.\ngo_bear({\n    1: {\n        'Beautiful bird;': {\n            b'thou voyagest to thine home,': False,\n        },\n    },\n})\n\n# This fails! A horrible dictionary brings your app crashing to the ground.\ngo_bear({\n    1: {\n        'With thine,': {\n            b'and welcome thy return with eyes': 1,\n        },\n    },\n})\n```\n\nType-checking violation messages even identify the exact key-value pair of arbitrarily complex pure-Python data structures responsible for those violations. The above example now helps you ruin your coworker's all-too-brief web app career by raising:\n\n```python\nbeartype.roar.BeartypeCallHintParamViolation: Function __main__.go_bear()\nparameter bear_bros_for_life={1: {'With thine,': {b'and welcome thy return with eyes': 1}}}\nviolates type hint dict[int, collections.abc.Mapping[str, collections.abc.MutableMapping[bytes, bool]]],\nas dict key int 1 value dict key str 'With thine,' value dict key bytes\nb'and welcome thy return with eyes' value int 1 not instance of bool.\n```\n\nBeartype 0.18.0: *I swear that looks more readable when you see it in person.*\n\n![](https://media1.tenor.com/m/lOEId72bKw0AAAAd/genos-kick-genos.gif)\n<sup>*if my leg ever bends like that, please call for help*</sup>\n\n## Defaults: Apparently, Beartype < 0.18.0 Didn't Bother Checking Those\n\n*...heh.* So, funny story. Apparently, @beartype < 0.18.0 didn't bother type-checking the **default values** of **optional parameters** at early `@beartype` decoration time. Why even bother, right? Beartype < 0.18.0 trusted you against its better judgement. Beartype < 0.18.0 only type-checked the default values of *unpassed* optional parameters at late function call time; if you always passed optional parameters (or never even called functions that accept optional parameters), @beartype < 0.18.0 *never* type-checked their defaults. This is why your office luncheons always order take-out that tastes like plastic.\n\nBeartype 0.18.0 conveniently overlooks the abject failings of the distant past by embracing a new normal that you always thought was happening. Now, it is. All default values are now type-checked at early `@beartype` decoration time – with one prominent exception we're about to get to.\n\n**Behold!** Type-check defaults at decoration time or go home, @beartype 0.18.0:\n\n```python\nfrom beartype import beartype\n\n@beartype\ndef beartype_i_am_your_code_father(\n    nooooooooooooo: int = 'Oh, you will be. You will be.') -> None: ...\n```\n\nDespite the offending (and clearly offensive) `beartype_i_am_your_code_father()` function *not* being called, the `@beartype` decorator now raises the expected type-checking violation at decoration time:\n\n```python\nbeartype.roar.BeartypeDecorHintParamDefaultViolation: Function\n__main__.beartype_i_am_your_code_father() parameter \"nooooooooooooo\"\ndefault value 'Oh, you will be. You will be.' violates type hint\n<class 'int'>, as str 'Oh, you will be. You will be.' not instance of int.\n```\n\nAbove, we wrote that:\n\n> All default values are now type-checked at early `@beartype` decoration time – with one prominent exception we're about to get to.\n\nWhat \"prominent exception,\" @beartype? What *bald*-faced lies are you trying to sell us now, @beartype?!\n\nThe prominent exception is forward references. When the type hint annotating an optional parameter contains one or more **unresolvable forward references** (i.e., references to types that have yet to be defined), the `@beartype` decorator just issues a non-fatal warning rather than raising a fatal exception. After all, there *might* be a real problem there – but there might also *not* be a real problem there. @beartype can't tell, because the type is undefined. So, @beartype just notifies you that something is up. The power is in your hands. The power was always in your hands. After all, you use @beartype: the QA Power Glove.™ <sup>*← awkwardly dated 80's moments*</sup>\n\n**Arise!** Ignore unresolvable forward references in optional parameters at decoration time, beartype 0.18.0:\n\n```python\nfrom beartype import beartype\n\n@beartype\ndef ive_seen_bugs(you_people_wouldnt_believe: 'TearsInTheGitter' = (\n    'Attack one-liners on fire off the shoulder of GitHub.')) -> None: ...\n```\n\n...which merely issues this non-fatal warning:\n\n```python\nBeartypeDecorHintParamDefaultForwardRefWarning: Function\n__main__.ive_seen_bugs() parameter \"you_people_wouldnt_believe\"\ndefault value 'Attack one-liners on fire off the shoulder of GitHub.'\nuncheckable at @beartype decoration time, as forward reference\n\"TearsInTheGitter\" unimportable from module \"__main__\".\n  @beartype\n```\n\nBeartype 0.18.0: *because QA in 2024 is so complicated that you're just passively nodding along in the vain hope that one of these nothingburgers will start making sense.*\n\n![](https://media1.tenor.com/m/aDmIHc2HUK8AAAAd/saitma.gif)\n<sup>if you ever see the Japanese character for death suspended in the air outlined in red letters, @beartype probably can't help you anymore. still, *it's worth a try*</sup>\n\n## PEP 647: `typing.TypeGuard` + `beartype.door.is_bearable()`: It's *BAAAAAAAAAACK*\n\nBeartype 0.18.0 resuscitates [PEP 647-compliant `typing.TypeGuard[T]`-based type narrowing](https://peps.python.org/pep-0647) on the [`beartype.door.is_bearable()`](https://beartype.readthedocs.io/en/latest/api_door/#beartype.door.is_bearable) type-checker. This means that mypy now loves `beartype.door.is_bearable()` as much as you love your ~~rabid~~ scrappy dog that mauls the jaded postal worker every day:\n\n```python\nfrom beartype.door import is_bearable  # <-- *NOW WITH THE POWER OF PEP 647*\n\ndef narrow_types_like_a_boss_with_beartype(lst: list[int | str]):\n    if is_bearable(lst, list[int]):\n        munch_on_list_of_integers(lst)  # <-- mypy now loooves this\n    elif is_bearable(lst, list[str]):\n        munch_on_list_of_strings(lst)   # <-- mypy love intensifies\n\ndef munch_on_list_of_strings(lst: list[str]): ...\ndef munch_on_list_of_integers(lst: list[int]): ...\n```\n\nThis is entirely thanks to a [mammoth dissertation-length dissection](https://github.com/beartype/beartype/issues/255#issuecomment-2015555878) by Python's unassailable `typing` genius @asford (Alex Ford) on the intersection <sup>*oh gods what does any of this mean anymore*</sup> of runtime and static type-checking vis-a-vis the procedural statement-level hybrid runtime-static type-checker `beartype.door.is_bearable()`, the PEP 484-compliant `@typing.overload` decorator, *and* the PEP 647-compliant `typing.TypeGuard[T]` type hint. Please redirect all blame towards @asford. I barely understand anything anymore.\n\nSadly:\n\n* This does *not* extend to the comparable object-oriented `beartype.door.TypeHint.is_bearable()` method – which continues to *not* perform type narrowing. Due to deficiencies in @leycec's wobbly brain, only the procedural `beartype.door.is_bearable()` function currently performs type narrowing.\n* This may *not* extend to `pyright`. Although mypy appears to fully support this API, `pyright` appears to raise fatal errors that make *no* sense and suggest `pyright` has an equally wobbly brain:\n\n  ```\n  /home/leycec/py/beartype/beartype/door/_doorcheck.py\n    /home/leycec/py/beartype/beartype/door/_doorcheck.py:209:5 - error: Overloaded implementation is not consistent with s>\n      Function return type \"TypeGuard[T@is_bearable]\" is incompatible with type \"bool\"\n        \"TypeGuard[T@is_bearable]\" is incompatible with \"bool\" (reportInconsistentOverload)\n    /home/leycec/py/beartype/beartype/door/_doorcheck.py:209:5 - error: Overloaded implementation is not consistent with s>\n      Function return type \"TypeGuard[T@is_bearable]\" is incompatible with type \"bool\"\n        \"TypeGuard[T@is_bearable]\" is incompatible with \"bool\" (reportInconsistentOverload)\n  2 errors, 0 warnings, 0 informations\n  ```\n\nWhat's \"funny\" about that is that:\n\n* All `TypeGuard[...]` type hints reduce to and are thus compatible with the standard `bool` type.\n* PEP 647 claims that the reference implementation of PEP 647 is (*...waitforit*) `pyright`:\n\n  > The Pyright type checker supports the behavior described in this PEP.\n\nGuess it doesn't, huh? We cry wet crocodile tears for OO and `pyright`.\n\nBeartype 0.18.0: *@leycec cannot be held responsible for his own failings.*\n\n![](https://media1.tenor.com/m/2nG3xpybEC4AAAAC/one-punch-man-saitama.gif)\n<sup>*@leycec clutches a living-preserving cup of \"matcha on the rocks.\"*</sup>\n\n## PEP 613: `typing.TypeAlias`: It's Deprecated, But That's Okay, Because Literally Everything Is Deprecated\n\nDoes anyone even care about deprecations anymore? *Everything* in the standard `typing` package has now been deprecated. When everything is deprecated, nothing is deprecated. The desensitization is real and you no longer care.\n\nBeartype 0.18.0 appreciates your growing sense of futility and vaguely uneasy apprehension of impending doom. After all, @beartype is the codebase built by a playlist of twelve continuous days of stoner caveman doom metal from Dorset. If it's got a reputable name like [\"Dopesmoker\"](https://www.youtube.com/watch?v=hIw7oeZKpZc), [\"Dopethrone\"](https://www.youtube.com/watch?v=eaMbKZPBruU), [\"Shroomaroom\"](https://www.youtube.com/watch?v=zv658dbCiyU), or [\"Satori\"](https://www.youtube.com/watch?v=hIjshrNAO6c), we probably resolved your issue to it without your consent. Bonus GitHub karma to the bear bro that names the album that starts with this well-intended life lesson:\n\n> Drop out of life with bong in hand!\n> Follow the smoke to the riff-filled land!\n\nThat's why @beartype now officially supports PEPs that are dead that nobody cares about anymore like [**PEP 613: `typing.TypeAlias`**](https://peps.python.org/pep-0613/). Although deprecated by [**PEP 695 type aliases**](https://peps.python.org/pep-0695) (e.g., type hints of the form `type {alias_name} = {alias_value}` under Python ≥ 3.12), PEP 613 type aliases are still widely prevalent throughout the open-source community. Specifically, @beartype now:\n\n* Emits an absurd deprecating warning for each PEP 613 type alias that spans five volumes of archaic dead-tree print like that long-lost Brandon Sanderson cyberpunk fantasy saga you always knew existed:\n\n  ```python\n  BeartypeDecorHintPep613DeprecationWarning: PEP 613 type hint\n  typing.TypeAlias deprecated by PEP 695. Consider either:\n  * Requiring Python >= 3.12 and refactoring PEP 613 type aliases into\n    PEP 695 type aliases. Note that Python < 3.12 will hate you for\n    this: e.g.,\n      # Instead of this...\n      from typing import TypeAlias\n      alias_name: TypeAlias = alias_value\n\n      # ...just do this.\n      type alias_name = alias_value\n  * Refactoring PEP 613 type aliases into PEP 484 \"typing.NewType\"-based\n    type aliases. Note that static type-checkers (e.g., mypy, pyright,\n    Pyre) will hate you for this: e.g.,\n      # Instead of this...\n      from typing import TypeAlias\n      alias_name: TypeAlias = alias_value\n\n      # ...just do this.\n      from typing import NewType\n      alias_name = NewType(\"alias_name\", alias_value)\n\n  Combine the above two approaches via The Ultimate Type Alias (TUTA),\n  a hidden ninja technique that supports all Python versions and static\n  type-checkers but may cause coworker heads to pop off like in that one\n  jolly Kingsman scene:\n      # Instead of this...\n      from typing import TypeAlias\n      alias_name: TypeAlias = alias_value\n\n      # ...\"just\" do this. If you think this sucks, know that you are not alone.\n      from typing import TYPE_CHECKING, NewType, TypeAlias  # <-- sus af\n      from sys import version_info  # <-- code just got real\n      if TYPE_CHECKING:  # <-- if static type-checking, then PEP 613\n          alias_name: TypeAlias = alias_value  # <-- grimdark coding style\n      elif version_info >= (3, 12):  # <-- if Python >= 3.12, then PEP 695\n          exec(\"type alias_name = alias_value\")  # <-- eldritch abomination\n      else:  # <-- if Python < 3.12, then PEP 484\n          alias_name = NewType(\"alias_name\", alias_value)  # <-- coworker gives up here\n  ```\n\n* Otherwise ignores each PEP 613 type alias, which conveys *no* meaningful semantics or metadata. Frankly, it's unclear why PEP 613 even exists. The CPython developer community felt similarly, which is why PEP 695 type aliases deprecate PEP 613.\n\nBeartype 0.18.0: *it's not our fault.*\n\n![](https://media1.tenor.com/m/VQo4BlIOiKAAAAAC/saitama-vs-genos-renatoxd-saitama-vs-genos.gif)\n<sup>*gettin' kinda queasy watchin' cyborg man spin around like an unsafe carousel on fire*</sup>\n\n## Warning and Exception Messages: They No Longer Blow Quite As Much Chunks\n\nThey still blow chunks, of course. @beartype gonna @beartype. But at least warning and exception messages emitted by @beartype no longer blow *quite as much* chunks. I'll take it.\n\nSpecifically:\n\n* Type-checking violations now sport a (slightly) more coherent **colour scheme.** Let me know if you hate it. Monochrome lovers gonna hate, of course. I (probably) won't do anything about your justifiable complaints, of course. I'm unresponsive, mentally flabby, and lack fortitude. I'll just quietly accept your abuse. But at least one of us might feel better.\n* The `beartype.door.beartype_this_package()` import hook (i.e., the rising child star of the @beartype ecosystem that our sketchy PR agency has been spamming your inbox with) now raises exception messages like this when called from:\n  * Top-level scripts:\n\n    ```python\n    beartype.roar.BeartypeClawHookUnpackagedException: Top-level script\n    \"/home/leycec/tmp/src/script.py\" resides outside package structure.\n    Consider calling another \"beartype.claw\" import hook. However, note that only\n    other modules will be type-checked. \"/home/leycec/tmp/src/script.py\" itself\n    will remain unchecked. All business logic should reside in submodules\n    subsequently imported by \"/home/leycec/tmp/src/script.py\": e.g.,\n        # Instead of this at the top of \"/home/leycec/tmp/src/script.py\"...\n        from beartype.claw import beartype_this_package  # <-- you are here\n        beartype_this_package()                          # <-- feels bad\n\n        # ...pass the basename of the \"src/\" subdirectory explicitly.\n        from beartype.claw import beartype_package  # <-- you want to be here\n        beartype_package(\"src\")  # <-- feels good\n\n        from src.main_submodule import main_func  # <-- still feels good\n        main_func()                   # <-- *GOOD*! \"beartype.claw\" type-checks this\n        some_global: str = 0xFEEDFACE  # <-- *BAD*! \"beartype.claw\" ignores this\n    This has been a message from your friendly neighbourhood bear.\n    ```\n\n  * Top-level modules:\n\n    ```python\n    Top-level module \"main.py\" resides outside package structure but was\n    *NOT* directly run as a script. \"beartype.claw\" import hooks require\n    that modules either reside inside a package structure or be directly\n    run as scripts. Since neither applies here, you are now off the deep\n    end. @beartype no longer has any idea what is going on, sadly.\n    Consider directly decorating classes and functions by the\n    @beartype.beartype decorator instead: e.g.,\n        # Instead of this at the top of \"main\"...\n        from beartype.claw import beartype_this_package  # <-- you are here\n        beartype_this_package()                          # <-- feels bad\n\n        # ...go old-school like it's 2017 and you just don't care.\n        from beartype import beartype  # <-- you want to be here\n        @beartype  # <-- feels good, yet kinda icky at same time\n        def spicy_func() -> str: ...  # <-- *GOOD*! @beartype type-checks this\n        some_global: str = 0xFEEDFACE  # <-- *BAD*! @beartype ignores this, but what can you do\n    For your safety, @beartype will now crash and burn.\n    ```\n\n* Prefixes *all* warning messages with contextual metadata describing the origin of those warnings. This includes the names of the responsible module, class, and/or callables that are rapidly sapping your will to code even a single line more. Notably:\n  * PEP 585 deprecations, in particular, were particularly useless. They failed to notify you *where* exactly the deprecated type hint came from. Now, @beartype candidly tells all about childhood trauma on the Christopher Robin farm:\n\n    ```python\n    from beartype import beartype\n    from typing import List  # <-- deprecated is bad, but that doesn't mean you care\n\n    @beartype\n    def when_the_going_get_buggy(the_buggy_get_beartype: List[str]) -> None: ...\n    ```\n\n    ...which now raises a deprecation warning that actually helps you succeed on your own merit for once:\n\n    ```python\n    BeartypeDecorHintPep585DeprecationWarning: Function\n    __main__.when_the_going_get_buggy() parameter \"the_buggy_get_beartype\"\n    PEP 484 type hint typing.List[str] deprecated by PEP 585. This hint is\n    scheduled for removal in the first Python version released after October\n    5th, 2025. To resolve this, import this hint from \"beartype.typing\"\n    rather than \"typing\". For further commentary and alternatives, see also:\n        https://beartype.readthedocs.io/en/latest/api_roar/#pep-585-deprecations\n    ```\n\n  * **PEP 526-compliant annotated variable assignments** (e.g., `muh_var: int | str = True`), for which `beartype.claw` import hooks raised similarly useless type-checking violation messages. Thankfully:\n    * Global annotated variable assignments like this:\n\n      ```python\n      bad_global: str = 0xFEEDFACE\n      ```\n\n      ...now yield violations like this:\n\n      ```python\n      beartype.roar.BeartypeDoorHintViolation: Global variable\n      \"__main__.bad_global\" value 4277009102 violates type hint <class\n      'str'>, as int 4277009102 not instance of str.\n      ```\n\n    * Local annotated variable assignments like this:\n\n      ```python\n      def bad_func():\n          bad_local: int = \"This local is bad. It's bad. It knows it.\"\n\n      bad_func()\n      ```\n\n      ...now yield violations like this:\n\n      ```python\n      beartype.roar.BeartypeDoorHintViolation: Callable\n      paga.__main__.bad_func() local variable \"bad_local\" value \"This local\n      is bad. It's bad. It knows it.\" violates type hint <class 'int'>, as\n      str \"This local is bad. It's bad. It knows it.\" not instance of int.\n      ```\n\nBeartype 0.18.0: *raise your paws in the air like you just don't care.*\n\n![](https://media1.tenor.com/m/zzJirIC6h08AAAAd/life-alert-genos.gif)\n<sup>*that feeling when you replace your hand with a black-and-white Ultima Cannon and it's still not good enough*</sup>\n\n## I Am Very Tired and I Must Now Lie Down\n\nBeartype 0.18.0 salutes the bear bros and gals and cats and ~~rabid~~ scrappy dogs that made this miracle possible:\n\n@posita, @patrick-kidger, @wesselb, @tusharsadhwani, @JWCS, @iamrecursion, @rbroderi, @tvdboom, @AlanCoding, @crypdick,<sup>← lol</sup> @komodovaran, @rwiegan, @avolchek, @jaanli, @brettc, @spagdoon0411, @helderco, @jamesbraza, @dcharatan, @kasium, @uriyasama\n\n![](https://media1.tenor.com/m/lmEqU7C-Si8AAAAd/saitama-chips.gif)\n<sup>Standard @beartype training exercise: *all fun and games until you're down to the last chip.*</sup>",
      "tree": {
        "sha": "472de65307f117583f9b933819ead75590699d50",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/472de65307f117583f9b933819ead75590699d50"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/af99dfec2643ef4614fc07116a7048ac4153c0ce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/af99dfec2643ef4614fc07116a7048ac4153c0ce",
    "html_url": "https://github.com/beartype/beartype/commit/af99dfec2643ef4614fc07116a7048ac4153c0ce",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/af99dfec2643ef4614fc07116a7048ac4153c0ce/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "874776af77f27090e0594db3954d94cb805f0054",
        "url": "https://api.github.com/repos/beartype/beartype/commits/874776af77f27090e0594db3954d94cb805f0054",
        "html_url": "https://github.com/beartype/beartype/commit/874776af77f27090e0594db3954d94cb805f0054"
      }
    ]
  },
  {
    "sha": "874776af77f27090e0594db3954d94cb805f0054",
    "node_id": "C_kwDODw8UQdoAKDg3NDc3NmFmNzdmMjcwOTBlMDU5NGRiMzk1NGQ5NGNiODA1ZjAwNTQ",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-28T06:31:45Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-28T07:00:08Z"
      },
      "message": "`beartype.door.is_bearable()` + PEP 647.\n\nThis commit resuscitates PEP 647-compliant `typing.TypeGuard[T]`-based\ntype narrowing on the statement-level runtime type-checker\n`beartype.door.is_bearable()`, resolving feature request #255 kindly\nsubmitted by Florida Polytechnic polymath @alexander-c-b (Alexander C.\nBodoh) back when @leycec still had hair. Specifically, this commit:\n\n* Restores @beartype support for PEP 647, entirely thanks to a\n  [mammoth dissertation-length\n  dissection](https://github.com/beartype/beartype/issues/255#issuecomment-2015555878)\n  of the intersection (*oh gods, what does any of this mean anymore) of\n  runtime and static type-checking vis-a-vis the procedural\n  statement-level hybrid runtime-static type-checker\n  `beartype.door.is_bearable()`, the PEP 484-compliant\n  `@typing.overload` decorator, *and* the PEP 647-compliant\n  `typing.TypeGuard[T]` type hint – all courtesy Python's unassailable\n  `typing` genius @asford (Alex Ford). A prefatory comment in the\n  @beartype codebase now glibly reads:\n\n  ```python\n  # Note that this PEP 484- and 647-compliant API is entirely the brain child of\n  # @asford (Alex Ford). If this breaks, redirect all ~~vengeance~~ enquiries to:\n  #     https://github.com/asford\n  ```\n\n* Restores our previously disabled FAQ entry documenting @beartype\n  support for PEP 647.\n\nSadly:\n\n* This does *not* extend to the comparable object-oriented\n  `beartype.door.TypeHint.is_bearable()` method – which continues to\n  *not* perform type narrowing. Due to deficiencies in @leycec's wobbly\n  brain, only the procedural `beartype.door.is_bearable()` function\n  currently performs type narrowing.\n* This may *not* extend to pyright. Although mypy appears to fully\n  support this API, pyright appears to raise fatal errors that make *no*\n  sense and suggest pyright to have an equally wobbly brain:\n\n  ```\n  /home/leycec/py/beartype/beartype/door/_doorcheck.py\n    /home/leycec/py/beartype/beartype/door/_doorcheck.py:209:5 - error: Overloaded implementation is not consistent with signature of overload 1\n      Function return type \"TypeGuard[T@is_bearable]\" is incompatible with type \"bool\"\n        \"TypeGuard[T@is_bearable]\" is incompatible with \"bool\" (reportInconsistentOverload)\n    /home/leycec/py/beartype/beartype/door/_doorcheck.py:209:5 - error: Overloaded implementation is not consistent with signature of overload 2\n      Function return type \"TypeGuard[T@is_bearable]\" is incompatible with type \"bool\"\n        \"TypeGuard[T@is_bearable]\" is incompatible with \"bool\" (reportInconsistentOverload)\n  2 errors, 0 warnings, 0 informations\n  ```\n\nWhat's \"funny\" about that is that:\n\n* *All* `TypeGuard[...]` type hints (including\n  `TypeGuard[T@is_bearable]`, whatever that even is) reduce to and are\n  thus compatible with the standard `bool` type.\n* PEP 647 claims that the reference implementation of PEP 647 is\n  (*...waitforit*) pyright:\n\n      The Pyright type checker supports the behavior described in this\n      PEP.\n\nGuess it doesn't, huh? We cry wet crocodile tears for OO and pyright.\n(*Wet wetlands band pet band-aids!*)",
      "tree": {
        "sha": "f4e1074e9922b6db43105f929e152943cdaeba07",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/f4e1074e9922b6db43105f929e152943cdaeba07"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/874776af77f27090e0594db3954d94cb805f0054",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/874776af77f27090e0594db3954d94cb805f0054",
    "html_url": "https://github.com/beartype/beartype/commit/874776af77f27090e0594db3954d94cb805f0054",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/874776af77f27090e0594db3954d94cb805f0054/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fccdb4cb14038a343902b95153c66284f4a9ded",
        "url": "https://api.github.com/repos/beartype/beartype/commits/0fccdb4cb14038a343902b95153c66284f4a9ded",
        "html_url": "https://github.com/beartype/beartype/commit/0fccdb4cb14038a343902b95153c66284f4a9ded"
      }
    ]
  },
  {
    "sha": "0fccdb4cb14038a343902b95153c66284f4a9ded",
    "node_id": "C_kwDODw8UQdoAKDBmY2NkYjRjYjE0MDM4YTM0MzkwMmI5NTE1M2M2NjI4NGY0YTlkZWQ",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-27T06:30:24Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-27T06:30:24Z"
      },
      "message": "Parameter default type-checking x 4.\n\nThis commit is the last in a commit chain type-checking the default\nvalues of optional parameters accepted by `@beartype`-decorated\ncallables, resolving feature request #154 kindly submitted by @dosisod\n(Logan Hunt) a literal lifetime ago when @leycec still had hair. And\nwhat kind of an unabashedly superheroic name is \"Logan Hunt,\" anyway? He\nwas destined for greatness. Specifically, this commit:\n\n* Defines two new exception and warning types:\n  * `beartype.roar.BeartypeDecorHintParamDefaultViolation`, raised at\n    `@beartype` decoration time when the default value of an optional\n    parameter violates its type hint.\n  * `beartype.roar.BeartypeDecorHintParamDefaultForwardRefWarning`,\n    emitted when the type hint annotating an optional parameter contains\n    one or more **unresolvable forward references** (i.e., references to\n    user-defined objects that have yet to be defined at `@beartype`\n    decoration time).\n* Raises the new `beartype.roar.BeartypeDecorHintParamDefaultViolation`\n  exception type at `@beartype` decoration time when the default value\n  of an optional parameter violates its type hint.\n* Emits the new\n  `beartype.roar.BeartypeDecorHintParamDefaultForwardRefWarning` warning\n  category when the type hint annotating an optional parameter contains\n  one or more unresolvable forward references.\n* Exhaustively tests this functionality.\n\nI am exhausted so that you don't have to be.\n(*Contrariwise to unwise disestablishmentarian contrarianism!*)",
      "tree": {
        "sha": "fa330bfadbd30c42c113f7c077419d6a4271ae4a",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/fa330bfadbd30c42c113f7c077419d6a4271ae4a"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/0fccdb4cb14038a343902b95153c66284f4a9ded",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/0fccdb4cb14038a343902b95153c66284f4a9ded",
    "html_url": "https://github.com/beartype/beartype/commit/0fccdb4cb14038a343902b95153c66284f4a9ded",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/0fccdb4cb14038a343902b95153c66284f4a9ded/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3926b09acc4c8140a2c322d7be66ec303d78c200",
        "url": "https://api.github.com/repos/beartype/beartype/commits/3926b09acc4c8140a2c322d7be66ec303d78c200",
        "html_url": "https://github.com/beartype/beartype/commit/3926b09acc4c8140a2c322d7be66ec303d78c200"
      }
    ]
  },
  {
    "sha": "3926b09acc4c8140a2c322d7be66ec303d78c200",
    "node_id": "C_kwDODw8UQdoAKDM5MjZiMDlhY2M0YzgxNDBhMmMzMjJkN2JlNjZlYzMwM2Q3OGMyMDA",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-26T06:15:24Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-26T06:15:24Z"
      },
      "message": "`beartype.claw` + typed keyword-only callables.\n\nThis commit resolves a critical defect in the `beartype.claw` API in\nwhich import hooks published by that API (e.g.,\n`beartype_this_package()`) silently failed to type-check edge-case\ncallables accepting *only* keyword-only parameters and annotated *only*\nby type hints on those parameters, resolving issue #345 kindly submitted\nby chad `typing` expert @avolchek (Andrei Volchek). This commit also\napplies the same consideration to callables accepting *only*\nkeyword-only parameters and annotated *only* by type hints on those\nparameters, which *may* have suffered a similar critical defect. It's\nkinda hard to tell. Let us pretend everything works now, everybody. It's\neasy. Hypnobear compels you to believe these sweet nothings. (*Fleet bleating bear sheep!*)",
      "tree": {
        "sha": "fa782a97c9df2d62a8f64af70e3fa64c7a4f3657",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/fa782a97c9df2d62a8f64af70e3fa64c7a4f3657"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/3926b09acc4c8140a2c322d7be66ec303d78c200",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/3926b09acc4c8140a2c322d7be66ec303d78c200",
    "html_url": "https://github.com/beartype/beartype/commit/3926b09acc4c8140a2c322d7be66ec303d78c200",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/3926b09acc4c8140a2c322d7be66ec303d78c200/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbf92e8a8393b83895f945c73ac1086c9a5bd851",
        "url": "https://api.github.com/repos/beartype/beartype/commits/bbf92e8a8393b83895f945c73ac1086c9a5bd851",
        "html_url": "https://github.com/beartype/beartype/commit/bbf92e8a8393b83895f945c73ac1086c9a5bd851"
      }
    ]
  },
  {
    "sha": "bbf92e8a8393b83895f945c73ac1086c9a5bd851",
    "node_id": "C_kwDODw8UQdoAKGJiZjkyZThhODM5M2I4Mzg5NWY5NDVjNzNhYzEwODZjOWE1YmQ4NTE",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-23T07:12:28Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-23T07:19:44Z"
      },
      "message": "Parameter default type-checking x 3.\n\nThis commit is the next in a commit chain type-checking the default\nvalues of optional parameters accepted by `@beartype`-decorated\ncallables, en-route to resolving feature request #154 kindly submitted\nby @dosisod (Logan Hunt) a literal lifetime ago when @leycec still had\nhair. And what kind of an unabashedly superheroic name is \"Logan Hunt,\"\nanyway? He was destined for greatness. Specifically, this commit both:\n\n* Finalizes the refactoring of ANSI colour handling throughout the\n  codebase initiated under the prior commit.\n* Conditionally applies ANSI colouring to exception messages of\n  type-checking violations for default values.\n\nIn theory, this commit chain is nearly complete. All that remains is to\nactually test everything. But will we!? Will we do that!? Or will we\nsimply give up at the 1 yard line and collapse into a shuddering heap!?\nWho even knows what is happening in these commit messages anymore!? And\nwhy am I suddenly typing so many \"!?\" substrings!? (*Concomitant commitment!*)",
      "tree": {
        "sha": "e39833a78ff385559dde3568419c774ce3f1e9c2",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/e39833a78ff385559dde3568419c774ce3f1e9c2"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/bbf92e8a8393b83895f945c73ac1086c9a5bd851",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/bbf92e8a8393b83895f945c73ac1086c9a5bd851",
    "html_url": "https://github.com/beartype/beartype/commit/bbf92e8a8393b83895f945c73ac1086c9a5bd851",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/bbf92e8a8393b83895f945c73ac1086c9a5bd851/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5b876bb2bad9cee20f466849ec1d8253d6d95b7",
        "url": "https://api.github.com/repos/beartype/beartype/commits/a5b876bb2bad9cee20f466849ec1d8253d6d95b7",
        "html_url": "https://github.com/beartype/beartype/commit/a5b876bb2bad9cee20f466849ec1d8253d6d95b7"
      }
    ]
  },
  {
    "sha": "a5b876bb2bad9cee20f466849ec1d8253d6d95b7",
    "node_id": "C_kwDODw8UQdoAKGE1Yjg3NmJiMmJhZDljZWUyMGY0NjY4NDllYzFkODI1M2Q2ZDk1Yjc",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-22T06:53:19Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-22T06:53:19Z"
      },
      "message": "Parameter default type-checking x 2.\n\nThis commit is the next in a commit chain type-checking the default\nvalues of optional parameters accepted by `@beartype`-decorated\ncallables, en-route to resolving feature request #154 kindly submitted\nby @dosisod (Logan Hunt) a literal lifetime ago when @leycec still had\nhair. And what kind of an unabashedly superheroic name is \"Logan Hunt,\"\nanyway? He was destined for greatness. Specifically, this commit\nrefactors ANSI colour handling throughout the codebase for internal\nmaintainability, usability, and sanity. (*Unasked for majority for Majora's mask!*)",
      "tree": {
        "sha": "20e38c5249711af918cb4b4c4a16b2372511c16e",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/20e38c5249711af918cb4b4c4a16b2372511c16e"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/a5b876bb2bad9cee20f466849ec1d8253d6d95b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/a5b876bb2bad9cee20f466849ec1d8253d6d95b7",
    "html_url": "https://github.com/beartype/beartype/commit/a5b876bb2bad9cee20f466849ec1d8253d6d95b7",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/a5b876bb2bad9cee20f466849ec1d8253d6d95b7/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfe4791aeb60b76fcf70a5906fc557e5d172a6a8",
        "url": "https://api.github.com/repos/beartype/beartype/commits/dfe4791aeb60b76fcf70a5906fc557e5d172a6a8",
        "html_url": "https://github.com/beartype/beartype/commit/dfe4791aeb60b76fcf70a5906fc557e5d172a6a8"
      }
    ]
  },
  {
    "sha": "dfe4791aeb60b76fcf70a5906fc557e5d172a6a8",
    "node_id": "C_kwDODw8UQdoAKGRmZTQ3OTFhZWI2MGI3NmZjZjcwYTU5MDZmYzU1N2U1ZDE3MmE2YTg",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-21T07:27:38Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-21T07:27:38Z"
      },
      "message": "Parameter default type-checking x 1.\n\nThis commit is the first in a commit chain type-checking the default\nvalues of optional parameters accepted by `@beartype`-decorated\ncallables, en-route to resolving feature request #154 kindly submitted\nby @dosisod (Logan Hunt) a literal lifetime ago when @leycec still had\nhair. And what kind of an unabashedly superheroic name is \"Logan Hunt,\"\nanyway? He was destined for greatness. Specifically, this commit fully\nimplements support for type-checking default values. Since we have yet\nto fully test this, further commits technically remain. Technically.\n(*Veritably, remnants of a venerable revenant!*)",
      "tree": {
        "sha": "b9213b7cff6e7642fd71a52fd7b3341f54cbefec",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/b9213b7cff6e7642fd71a52fd7b3341f54cbefec"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/dfe4791aeb60b76fcf70a5906fc557e5d172a6a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/dfe4791aeb60b76fcf70a5906fc557e5d172a6a8",
    "html_url": "https://github.com/beartype/beartype/commit/dfe4791aeb60b76fcf70a5906fc557e5d172a6a8",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/dfe4791aeb60b76fcf70a5906fc557e5d172a6a8/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb82b1b8f10352d2bf1195854af3c7679d6645ac",
        "url": "https://api.github.com/repos/beartype/beartype/commits/fb82b1b8f10352d2bf1195854af3c7679d6645ac",
        "html_url": "https://github.com/beartype/beartype/commit/fb82b1b8f10352d2bf1195854af3c7679d6645ac"
      }
    ]
  },
  {
    "sha": "fb82b1b8f10352d2bf1195854af3c7679d6645ac",
    "node_id": "C_kwDODw8UQdoAKGZiODJiMWI4ZjEwMzUyZDJiZjExOTU4NTRhZjNjNzY3OWQ2NjQ1YWM",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-20T07:52:51Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-20T07:52:51Z"
      },
      "message": "`@functool.wraps()` classes.\n\nThis commit generalizes the `@beartype` decorator to reluctantly\nacknowledge the existence of horrifying wrapper expressions that pass\ntypes rather than callables to the standard `@functool.wraps` decorator\n(e.g., `@functool.wraps(list)`), resolving issue #339 kindly submitted\nby the indomitable and fierce of heart @sylvorg. Previously, `@beartype`\nraised unreadable exceptions when confronted with this profane edge\ncase. Now, `@beartype` turns a blind eye to the special darkness in your\ncodebase by silently ignoring *all* wrapped objects that are not\npure-Python callables. **K-k-k-killer Combo!!** (*Insane inanities!*)",
      "tree": {
        "sha": "f0ce43cb148779549744ac2f215d04585e17fa46",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/f0ce43cb148779549744ac2f215d04585e17fa46"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/fb82b1b8f10352d2bf1195854af3c7679d6645ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/fb82b1b8f10352d2bf1195854af3c7679d6645ac",
    "html_url": "https://github.com/beartype/beartype/commit/fb82b1b8f10352d2bf1195854af3c7679d6645ac",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/fb82b1b8f10352d2bf1195854af3c7679d6645ac/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074",
        "url": "https://api.github.com/repos/beartype/beartype/commits/8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074",
        "html_url": "https://github.com/beartype/beartype/commit/8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074"
      }
    ]
  },
  {
    "sha": "8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074",
    "node_id": "C_kwDODw8UQdoAKDhlM2NlZjZiYjZiYjYwMmNkMWQwYmJmYmVkNGRlYTY2MTE1YTgwNzQ",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-19T07:17:17Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-19T07:29:18Z"
      },
      "message": "PEP 563 + PEP 604 union + undefined types.\n\nThis commit generalizes @beartype to support an edge case with respect\nto PEPs 557, 563, and 604, resolving issue #342 kindly submitted by\nyeasty VimScript bioinformatics guru @brettc (Brett Calcott).\nSpecifically, this commit resolves an issue arising from which enabling\nPEP 563 via from `__future__ import annotations`, defining a PEP 604\nunion over multiple undefined types, and then annotating a PEP 557\n`@dataclass` with that union. We *did* say edge case, didn't we?\nUnsurprisingly, this was surprisingly non-trivial. This is why you just\nlets @beartype do the heavy lifting. (*Heavy levy!*)",
      "tree": {
        "sha": "9be063b6bcd39047a182a37b0d8f77cda70d452b",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/9be063b6bcd39047a182a37b0d8f77cda70d452b"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074",
    "html_url": "https://github.com/beartype/beartype/commit/8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/8e3cef6bb6bb602cd1d0bbfbed4dea66115a8074/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a342229ded98ac10d410ce9101a0941f685704d5",
        "url": "https://api.github.com/repos/beartype/beartype/commits/a342229ded98ac10d410ce9101a0941f685704d5",
        "html_url": "https://github.com/beartype/beartype/commit/a342229ded98ac10d410ce9101a0941f685704d5"
      }
    ]
  },
  {
    "sha": "a342229ded98ac10d410ce9101a0941f685704d5",
    "node_id": "C_kwDODw8UQdoAKGEzNDIyMjlkZWQ5OGFjMTBkNDEwY2U5MTAxYTA5NDFmNjg1NzA0ZDU",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-16T05:22:44Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-16T05:22:44Z"
      },
      "message": "`${PYTHONOPTIMIZED}` runtime detection.\n\nThis commit generalizes @beartype's detection of Python optimization to\ndynamically detect runtime changes by the external user (e.g., from\nwithin an interactive REPL) to the `${PYTHONOPTIMIZED}` environment\nvariable governing Python optimization, resolving feature request #341\nkindly submitted by global healthcare big brain @jaanli (Jaan Lı 李).\nNotably, the `@beartype` decorator now silently reduces to a noop (i.e.,\navoids decorating things with runtime type-checking) when external users\nmanually set the `${PYTHONOPTIMIZED}` environment variable to a non-zero\ninteger from within REPLs like Jupyter. Of course, no one should do\nthat. Of course, everyone will now begin doing that. (*Centripetal force on centrifugal fungi!*)",
      "tree": {
        "sha": "3e0f9f654bbc9c196ea5c1e32fca53e89408e382",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/3e0f9f654bbc9c196ea5c1e32fca53e89408e382"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/a342229ded98ac10d410ce9101a0941f685704d5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/a342229ded98ac10d410ce9101a0941f685704d5",
    "html_url": "https://github.com/beartype/beartype/commit/a342229ded98ac10d410ce9101a0941f685704d5",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/a342229ded98ac10d410ce9101a0941f685704d5/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f227bd6918348e726898104509f7e1e25d6edc2",
        "url": "https://api.github.com/repos/beartype/beartype/commits/9f227bd6918348e726898104509f7e1e25d6edc2",
        "html_url": "https://github.com/beartype/beartype/commit/9f227bd6918348e726898104509f7e1e25d6edc2"
      }
    ]
  },
  {
    "sha": "9f227bd6918348e726898104509f7e1e25d6edc2",
    "node_id": "C_kwDODw8UQdoAKDlmMjI3YmQ2OTE4MzQ4ZTcyNjg5ODEwNDUwOWY3ZTFlMjVkNmVkYzI",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-14T04:46:50Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-14T04:46:50Z"
      },
      "message": "Deep `dict` type-checking x 5.\n\nThis commit is the epochal last commit in a commit chain deeply\ntype-checking the first key-value pair of each **mapping type hint**\n(e.g., of the form `dict[..., ...]`, `collections.defaultdict[...,\n...]`, `collections.abc.Mapping[..., ...]`,\n`collections.abc.MutableMapping[..., ...]`,\n`collections.abc.OrderedDict[..., ...]`, `typing.Dict[..., ...]`,\n`typing.Mapping[..., ...]`, `typing.MutableMapping[..., ...]`, or\n`typing.OrderedDict[..., ...]`) in `O(1)` time, partially resolving\nlong-standing feature requests #167 kindly submitted sometime during my\nmost recent past life by ardent typing fiend @langfield *and*\n#2021 kindly submitted sometime during the past life immediately\npreceding my most recent past life by Equinor ASA bear bro @jondequinor\n(Jonas Grønås). Specifically, this commit exhaustively exercises this\ntype-checking with PEP 585-compliant type hints and sample data.\n**BOOM**! (*Basking basilisks!*)",
      "tree": {
        "sha": "df3e9b2ddbab6f900ccda7a7c0365b3bc6685263",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/df3e9b2ddbab6f900ccda7a7c0365b3bc6685263"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/9f227bd6918348e726898104509f7e1e25d6edc2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/9f227bd6918348e726898104509f7e1e25d6edc2",
    "html_url": "https://github.com/beartype/beartype/commit/9f227bd6918348e726898104509f7e1e25d6edc2",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/9f227bd6918348e726898104509f7e1e25d6edc2/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eb4f6fbdb126f05fa9f92473f477c0b052e6569c",
        "url": "https://api.github.com/repos/beartype/beartype/commits/eb4f6fbdb126f05fa9f92473f477c0b052e6569c",
        "html_url": "https://github.com/beartype/beartype/commit/eb4f6fbdb126f05fa9f92473f477c0b052e6569c"
      }
    ]
  },
  {
    "sha": "eb4f6fbdb126f05fa9f92473f477c0b052e6569c",
    "node_id": "C_kwDODw8UQdoAKGViNGY2ZmJkYjEyNmYwNWZhOWY5MjQ3M2Y0NzdjMGIwNTJlNjU2OWM",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-13T07:51:16Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-13T07:51:16Z"
      },
      "message": "Deep `dict` type-checking x 4.\n\nThis commit is the epochal next commit in a commit chain deeply\ntype-checking the first key-value pair of each **mapping type hint**\n(e.g., of the form `dict[..., ...]`, `collections.defaultdict[...,\n...]`, `collections.abc.Mapping[..., ...]`,\n`collections.abc.MutableMapping[..., ...]`,\n`collections.abc.OrderedDict[..., ...]`, `typing.Dict[..., ...]`,\n`typing.Mapping[..., ...]`, `typing.MutableMapping[..., ...]`, or\n`typing.OrderedDict[..., ...]`) in `O(1)` time, en-route to partially\nresolving long-standing feature requests #167 kindly submitted sometime\nduring my most recent past life by ardent typing fiend @langfield *and*\n#2021 kindly submitted sometime during the past life immediately\npreceding my most recent past life by Equinor ASA bear bro @jondequinor\n(Jonas Grønås). Specifically, this commit exhaustively exercises this\ntype-checking with PEP 484-compliant type hints and sample data. This\n*almost* concludes this commit chain. Now, we only have to exercise this\ntype-checking with PEP 585-compliant type hints and... *we will be\ndone.* (*Chilly chalice ain't painfully frilly!*)",
      "tree": {
        "sha": "9be914e187071a2abd956f5ff554334a7884d0d0",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/9be914e187071a2abd956f5ff554334a7884d0d0"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/eb4f6fbdb126f05fa9f92473f477c0b052e6569c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/eb4f6fbdb126f05fa9f92473f477c0b052e6569c",
    "html_url": "https://github.com/beartype/beartype/commit/eb4f6fbdb126f05fa9f92473f477c0b052e6569c",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/eb4f6fbdb126f05fa9f92473f477c0b052e6569c/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43b415c614427ecff30170511a15b5adbe47722a",
        "url": "https://api.github.com/repos/beartype/beartype/commits/43b415c614427ecff30170511a15b5adbe47722a",
        "html_url": "https://github.com/beartype/beartype/commit/43b415c614427ecff30170511a15b5adbe47722a"
      }
    ]
  },
  {
    "sha": "43b415c614427ecff30170511a15b5adbe47722a",
    "node_id": "C_kwDODw8UQdoAKDQzYjQxNWM2MTQ0MjdlY2ZmMzAxNzA1MTFhMTViNWFkYmU0NzcyMmE",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-12T06:45:12Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-12T07:05:02Z"
      },
      "message": "Deep `dict` type-checking x 3.\n\nThis commit is the epochal next commit in a commit chain deeply\ntype-checking the first key-value pair of each **mapping type hint**\n(e.g., of the form `dict[..., ...]`, `collections.defaultdict[...,\n...]`, `collections.abc.Mapping[..., ...]`,\n`collections.abc.MutableMapping[..., ...]`,\n`collections.abc.OrderedDict[..., ...]`, `typing.Dict[..., ...]`,\n`typing.Mapping[..., ...]`, `typing.MutableMapping[..., ...]`, or\n`typing.OrderedDict[..., ...]`) in `O(1)` time, en-route to partially\nresolving long-standing feature requests #167 kindly submitted sometime\nduring my most recent past life by ardent typing fiend @langfield *and*\n#2021 kindly submitted sometime during the past life immediately\npreceding my most recent past life by Equinor ASA bear bro @jondequinor\n(Jonas Grønås). Specifically, this commit does literally everything\neveryone always wanted. This is the mega-commit, the Big One™, the\nmoment where @beartype actually does something. @beartype now deeply\ntype-checks the first key-value pair of each mapping type hint in `O(1)`\ntime. Superficially, this has been tested to work. Pragmatically,\nsignificantly more testing is warranted. (*Massive missives!*)",
      "tree": {
        "sha": "bf62dc0fe4db8bdd43825418b1530dfac0154428",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/bf62dc0fe4db8bdd43825418b1530dfac0154428"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/43b415c614427ecff30170511a15b5adbe47722a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/43b415c614427ecff30170511a15b5adbe47722a",
    "html_url": "https://github.com/beartype/beartype/commit/43b415c614427ecff30170511a15b5adbe47722a",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/43b415c614427ecff30170511a15b5adbe47722a/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "174fc453b18d3ded6dcb3c38e7ea42c34cf32951",
        "url": "https://api.github.com/repos/beartype/beartype/commits/174fc453b18d3ded6dcb3c38e7ea42c34cf32951",
        "html_url": "https://github.com/beartype/beartype/commit/174fc453b18d3ded6dcb3c38e7ea42c34cf32951"
      }
    ]
  },
  {
    "sha": "174fc453b18d3ded6dcb3c38e7ea42c34cf32951",
    "node_id": "C_kwDODw8UQdoAKDE3NGZjNDUzYjE4ZDNkZWQ2ZGNiM2MzOGU3ZWE0MmMzNGNmMzI5NTE",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-11T05:36:40Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-11T05:36:40Z"
      },
      "message": "Deep `dict` type-checking x 2.\n\nThis commit is the epochal next commit in a commit chain deeply\ntype-checking *all* **mapping type hints** (e.g., of the form `dict[...,\n...]`, `collections.abc.Mapping[..., ...]`,\n`collections.abc.MutableMapping[..., ...]`, `typing.Dict[..., ...]`,\n`typing.Mapping[..., ...]`, or `typing.MutableMapping[..., ...]`),\nen-route to partially resolving long-standing feature requests #167\nkindly submitted sometime during my most recent past life by ardent\ntyping fiend @langfield *and* #2021 kindly submitted sometime during the\npast life immediately preceding my most recent past life by Equinor ASA\nbear bro @jondequinor (Jonas Grønås). Specifically, this commit improves\ninternal detection of ignorable type hints so as to be robust against\npernicious edge cases. Although essential, there isn't particularly much\nto see here. *Next!* (*Flummoxed ox flambé!*)",
      "tree": {
        "sha": "d008b2dd4fcb0018dbcb3d93f7acb421e6db1804",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/d008b2dd4fcb0018dbcb3d93f7acb421e6db1804"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/174fc453b18d3ded6dcb3c38e7ea42c34cf32951",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/174fc453b18d3ded6dcb3c38e7ea42c34cf32951",
    "html_url": "https://github.com/beartype/beartype/commit/174fc453b18d3ded6dcb3c38e7ea42c34cf32951",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/174fc453b18d3ded6dcb3c38e7ea42c34cf32951/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "505177d147cbf68746ca48c76696ed46132cc02c",
        "url": "https://api.github.com/repos/beartype/beartype/commits/505177d147cbf68746ca48c76696ed46132cc02c",
        "html_url": "https://github.com/beartype/beartype/commit/505177d147cbf68746ca48c76696ed46132cc02c"
      }
    ]
  },
  {
    "sha": "505177d147cbf68746ca48c76696ed46132cc02c",
    "node_id": "C_kwDODw8UQdoAKDUwNTE3N2QxNDdjYmY2ODc0NmNhNDhjNzY2OTZlZDQ2MTMyY2MwMmM",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-09T07:28:00Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-09T07:28:00Z"
      },
      "message": "Deep `dict` type-checking x 1.\n\nThis commit is the epochal first commit in a commit chain deeply\ntype-checking *all* **mapping type hints** (e.g., of the form `dict[...,\n...]`, `collections.abc.Mapping[..., ...]`,\n`collections.abc.MutableMapping[..., ...]`, `typing.Dict[..., ...]`,\n`typing.Mapping[..., ...]`, or `typing.MutableMapping[..., ...]`),\nen-route to partially resolving long-standing feature requests #167\nkindly submitted sometime during my most recent past life by ardent\ntyping fiend @langfield *and* #2021 kindly submitted sometime during the\npast life immediately preceding my most recent past life by Equinor ASA\nbear bro @jondequinor (Jonas Grønås). Specifically, this commit drafts a\ngargantuan Python expression intended to be subsequently interpolated\ninto dynamically generated code deeply type-checking mappings.\n(*Fiendish dishes dish out lean fishes!*)",
      "tree": {
        "sha": "0cf0b90ac2ecf459bd85fead1bc2bffa31b6110d",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/0cf0b90ac2ecf459bd85fead1bc2bffa31b6110d"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/505177d147cbf68746ca48c76696ed46132cc02c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/505177d147cbf68746ca48c76696ed46132cc02c",
    "html_url": "https://github.com/beartype/beartype/commit/505177d147cbf68746ca48c76696ed46132cc02c",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/505177d147cbf68746ca48c76696ed46132cc02c/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5424d271dc678c3855ca3d4c1542bf82cb1979ca",
        "url": "https://api.github.com/repos/beartype/beartype/commits/5424d271dc678c3855ca3d4c1542bf82cb1979ca",
        "html_url": "https://github.com/beartype/beartype/commit/5424d271dc678c3855ca3d4c1542bf82cb1979ca"
      }
    ]
  },
  {
    "sha": "5424d271dc678c3855ca3d4c1542bf82cb1979ca",
    "node_id": "C_kwDODw8UQdoAKDU0MjRkMjcxZGM2NzhjMzg1NWNhM2Q0YzE1NDJiZjgyY2IxOTc5Y2E",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-09T05:46:46Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-09T05:46:46Z"
      },
      "message": "Assignment expression code optimization x 2.\n\nThis commit is the last in a commit chain significantly optimizing\ngeneration of **assignment expressions** (i.e., PEP 572-compliant Python\nexpressions containing the \":=\" walrus operator) throughout code\nsnippets dynamically generated by @beartype's type-checking code\ngenerator. Since strings are expensive to repeatedly generate, @beartype\nnow internally caches and reuses frequently used local variables across\nassignment expressions. In truth, this means nothing. But @leycec just\n*had* to do this to satisfy his aberrant OCD disorder. I swear! It isn't\nmy fault! It's fast or it ain't @beartype. (*Holy bawling bowlers!*)",
      "tree": {
        "sha": "e74f223a529fe869b1246a2702945f9e14c6283b",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/e74f223a529fe869b1246a2702945f9e14c6283b"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/5424d271dc678c3855ca3d4c1542bf82cb1979ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/5424d271dc678c3855ca3d4c1542bf82cb1979ca",
    "html_url": "https://github.com/beartype/beartype/commit/5424d271dc678c3855ca3d4c1542bf82cb1979ca",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/5424d271dc678c3855ca3d4c1542bf82cb1979ca/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c32ed7d5da7dcc0380c36cc99b0be4eee83dce80",
        "url": "https://api.github.com/repos/beartype/beartype/commits/c32ed7d5da7dcc0380c36cc99b0be4eee83dce80",
        "html_url": "https://github.com/beartype/beartype/commit/c32ed7d5da7dcc0380c36cc99b0be4eee83dce80"
      }
    ]
  },
  {
    "sha": "c32ed7d5da7dcc0380c36cc99b0be4eee83dce80",
    "node_id": "C_kwDODw8UQdoAKGMzMmVkN2Q1ZGE3ZGNjMDM4MGMzNmNjOTliMGJlNGVlZTgzZGNlODA",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-08T07:40:15Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-08T07:40:15Z"
      },
      "message": "Assignment expression code optimization x 1.\n\nThis commit is the first in a commit chain significantly optimizing\ngeneration of **assignment expressions** (i.e., PEP 572-compliant Python\nexpressions containing the \":=\" walrus operator) throughout code\nsnippets dynamically generated by @beartype's type-checking code\ngenerator. Since strings are expensive to repeatedly generate, @beartype\nnow internally caches and reuses frequently used local variables across\nassignment expressions. In truth, this means nothing. But @leycec just\n*had* to do this to satisfy his aberrant OCD disorder. I swear! It isn't\nmy fault! It's fast or it ain't @beartype. (*Tsundera or tundra!?*)",
      "tree": {
        "sha": "ef1ff339f7e3d1281d780d5cc1965d6fb474ae12",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/ef1ff339f7e3d1281d780d5cc1965d6fb474ae12"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/c32ed7d5da7dcc0380c36cc99b0be4eee83dce80",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/c32ed7d5da7dcc0380c36cc99b0be4eee83dce80",
    "html_url": "https://github.com/beartype/beartype/commit/c32ed7d5da7dcc0380c36cc99b0be4eee83dce80",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/c32ed7d5da7dcc0380c36cc99b0be4eee83dce80/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c",
        "url": "https://api.github.com/repos/beartype/beartype/commits/1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c",
        "html_url": "https://github.com/beartype/beartype/commit/1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c"
      }
    ]
  },
  {
    "sha": "1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c",
    "node_id": "C_kwDODw8UQdoAKDFmNDE5ZGMwNmU4YzU4OGI3NmM0ZjZiM2NmMzRiZTY5OGNmMmZkN2M",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-07T07:10:22Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-07T07:10:22Z"
      },
      "message": "Indentation code generation optimization.\n\nThis commit significantly optimizes usage of indentation (i.e., semantic\nwhitespace) throughout code snippets dynamically generated by\n@beartype's type-checking code generator. Since strings are expensive to\nrepeatedly generate, @beartype now internally caches and reuses\nfrequently used indentation. In truth, this means nothing. But @leycec\njust *had* to do this to satisfy his aberrant OCD disorder. I swear! It\nisn't my fault! It's fast or it ain't @beartype. (*Ophthalmology or optimality!?*)",
      "tree": {
        "sha": "0d546ad29e164772c2f40d6410df61b66371b14e",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/0d546ad29e164772c2f40d6410df61b66371b14e"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c",
    "html_url": "https://github.com/beartype/beartype/commit/1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/1f419dc06e8c588b76c4f6b3cf34be698cf2fd7c/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b9c1ddc80bfea8888c732ad74399e7881912f3dc",
        "url": "https://api.github.com/repos/beartype/beartype/commits/b9c1ddc80bfea8888c732ad74399e7881912f3dc",
        "html_url": "https://github.com/beartype/beartype/commit/b9c1ddc80bfea8888c732ad74399e7881912f3dc"
      }
    ]
  },
  {
    "sha": "b9c1ddc80bfea8888c732ad74399e7881912f3dc",
    "node_id": "C_kwDODw8UQdoAKGI5YzFkZGM4MGJmZWE4ODg4YzczMmFkNzQzOTllNzg4MTkxMmYzZGM",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-06T06:40:10Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-06T06:40:10Z"
      },
      "message": "Granular PEP 526 messages x 4.\n\nThis commit is the last in a commit chain improving the granularity of\nboth exception and warning messages emitted for **PEP 526-compliant\nannotated variable assignments** (e.g., `muh_var: int | str = True`).\nPreviously, @beartype provided *no* contextual metadata describing these\nassignments in these messages. @beartype now prefixes these messages\nwith substrings describing the fully-qualified class, callable, and/or\nmodule directly performing these assignments. As example:\n\n* Global annotated variable assignments like this:\n\n  ```python\n  bad_global: str = 0xFEEDFACE\n  ```\n\n  ...now yield violations like this:\n\n  ```\n  beartype.roar.BeartypeDoorHintViolation: Global variable\n  \"__main__.bad_global\" value 4277009102 violates type hint <class\n  'str'>, as int 4277009102 not instance of str.\n  ```\n\n* Local annotated variable assignments like this:\n\n  ```python\n  def bad_func():\n      bad_local: int = \"This local is bad. It's bad. It knows it.\"\n\n  bad_func()\n  ```\n\n  ...now yield violations like this:\n\n  ```\n  beartype.roar.BeartypeDoorHintViolation: Callable\n  paga.__main__.bad_func() local variable \"bad_local\" value \"This local\n  is bad. It's bad. It knows it.\" violates type hint <class 'int'>, as\n  str \"This local is bad. It's bad. It knows it.\" not instance of int.\n  ```\n\n(*Forceful effluvia loves vials of ale!*)",
      "tree": {
        "sha": "4dd3c2f8fdcd87db23d36d1fea65e21e18d4fa2e",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/4dd3c2f8fdcd87db23d36d1fea65e21e18d4fa2e"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/b9c1ddc80bfea8888c732ad74399e7881912f3dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/b9c1ddc80bfea8888c732ad74399e7881912f3dc",
    "html_url": "https://github.com/beartype/beartype/commit/b9c1ddc80bfea8888c732ad74399e7881912f3dc",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/b9c1ddc80bfea8888c732ad74399e7881912f3dc/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34",
        "url": "https://api.github.com/repos/beartype/beartype/commits/e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34",
        "html_url": "https://github.com/beartype/beartype/commit/e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34"
      }
    ]
  },
  {
    "sha": "e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34",
    "node_id": "C_kwDODw8UQdoAKGUyZmY5NzRmNzBjZTdmOWE5ODQwYzFhYTAwZDQ2M2UyYjZlOGRhMzQ",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-05T08:46:05Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-05T08:46:05Z"
      },
      "message": "Granular PEP 526 messages x 3.\n\nThis commit is the next in a commit chain improving the granularity of\nboth exception and warning messages emitted for **PEP 526-compliant\nannotated variable assignments** (e.g., `muh_var: int | str = True`).\nPreviously, @beartype provided *no* contextual metadata describing these\nassignments in these messages. Once this commit chain is complete,\n@beartype will prefix these messages with a substring describing the\nfully-qualified class, callable, and/or module directly performing these\nassignments. Specifically, this commit improves the code generation\ninternally performed by beartype to reliably pass this prefix to our\nexception handler. This feature is now nearly complete. Rejoice, elves!\n(*Binary stars in a unary bar!*)",
      "tree": {
        "sha": "5ff0716f1f42745e5cf2d16730ef7a267996e3d9",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/5ff0716f1f42745e5cf2d16730ef7a267996e3d9"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34",
    "html_url": "https://github.com/beartype/beartype/commit/e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/e2ff974f70ce7f9a9840c1aa00d463e2b6e8da34/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa",
        "url": "https://api.github.com/repos/beartype/beartype/commits/a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa",
        "html_url": "https://github.com/beartype/beartype/commit/a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa"
      }
    ]
  },
  {
    "sha": "a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa",
    "node_id": "C_kwDODw8UQdoAKGE5YzA1ZTI4N2QyODk2ZTFiZjNmOWFjNTVjOGMzYjRkZDdlNDFiZmE",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-01T07:51:44Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-03-01T08:27:56Z"
      },
      "message": "Granular PEP 526 messages x 2.\n\nThis commit is the next in a commit chain improving the granularity of\nboth exception and warning messages emitted for **PEP 526-compliant\nannotated variable assignments** (e.g., `muh_var: int | str = True`).\nPreviously, @beartype provided *no* contextual metadata describing these\nassignments in these messages. Once this commit chain is complete,\n@beartype will prefix these messages with a substring describing the\nfully-qualified class, callable, and/or module directly performing these\nassignments. Specifically, this commit refactors the abstract syntax\ntree (AST) transformation applied by beartype import hooks to reliably\nconstruct and pass this prefix to our\n`beartype.door.die_if_unbearable()` type-checker. (*Sassy seasoning!*)",
      "tree": {
        "sha": "9bf48c290a1ae37f5592d80d10e985f2bff8d2d2",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/9bf48c290a1ae37f5592d80d10e985f2bff8d2d2"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa",
    "html_url": "https://github.com/beartype/beartype/commit/a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/a9c05e287d2896e1bf3f9ac55c8c3b4dd7e41bfa/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c92d5bb23a9e97a0754cf5df34280f39de3edc96",
        "url": "https://api.github.com/repos/beartype/beartype/commits/c92d5bb23a9e97a0754cf5df34280f39de3edc96",
        "html_url": "https://github.com/beartype/beartype/commit/c92d5bb23a9e97a0754cf5df34280f39de3edc96"
      }
    ]
  },
  {
    "sha": "c92d5bb23a9e97a0754cf5df34280f39de3edc96",
    "node_id": "C_kwDODw8UQdoAKGM5MmQ1YmIyM2E5ZTk3YTA3NTRjZjVkZjM0MjgwZjM5ZGUzZWRjOTY",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-02-29T08:19:27Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-02-29T08:19:27Z"
      },
      "message": "Granular PEP 526 messages x 1.\n\nThis commit is the first in a commit chain improving the granularity of\nboth exception and warning messages emitted for **PEP 526-compliant\nannotated variable assignments** (e.g., `muh_var: int | str = True`).\nPreviously, @beartype provided *no* contextual metadata describing these\nassignments in these messages. Once this commit chain is complete,\n@beartype will prefix these messages with a substring describing the\nfully-qualified class, callable, and/or module directly performing these\nassignments. Specifically, this commit begins laying the preparatory\ngroundwork for actually doing something. (*Rambling brambles!*)",
      "tree": {
        "sha": "95653e7af2793d74ac23495006930c9402297e69",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/95653e7af2793d74ac23495006930c9402297e69"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/c92d5bb23a9e97a0754cf5df34280f39de3edc96",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/c92d5bb23a9e97a0754cf5df34280f39de3edc96",
    "html_url": "https://github.com/beartype/beartype/commit/c92d5bb23a9e97a0754cf5df34280f39de3edc96",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/c92d5bb23a9e97a0754cf5df34280f39de3edc96/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c2733e19768454bafd3f12d42a345cbe799f42d",
        "url": "https://api.github.com/repos/beartype/beartype/commits/6c2733e19768454bafd3f12d42a345cbe799f42d",
        "html_url": "https://github.com/beartype/beartype/commit/6c2733e19768454bafd3f12d42a345cbe799f42d"
      }
    ]
  },
  {
    "sha": "6c2733e19768454bafd3f12d42a345cbe799f42d",
    "node_id": "C_kwDODw8UQdoAKDZjMjczM2UxOTc2ODQ1NGJhZmQzZjEyZDQyYTM0NWNiZTc5OWY0MmQ",
    "commit": {
      "author": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-02-28T08:35:38Z"
      },
      "committer": {
        "name": "leycec",
        "email": "leycec@gmail.com",
        "date": "2024-02-28T08:35:38Z"
      },
      "message": "PEP 613 x 2.\n\nThis commit is the last in a commit chain adding support for deprecated\n**PEP 613 type aliases** (i.e., the `typing.TypeAlias` type hint\nsingleton), resolving feature request #328 kindly submitted by\nspaghetti-loving Bay Area pasta guru @jamesbraza (James Braza). Although\nsince deprecated by **PEP 695 type aliases** (e.g., type hints of the\nform `type {alias_name} = {alias_value}` under Python â<U+0089>¥ 3.12),\nPEP 613 type aliases are still widely prevalent throughout the\nopen-source community. (*Humongous fungus high in dextrose is a dextrous monstrosity!*)",
      "tree": {
        "sha": "0c4cfc01b63f01446299e0f3e9f1034337e0de85",
        "url": "https://api.github.com/repos/beartype/beartype/git/trees/0c4cfc01b63f01446299e0f3e9f1034337e0de85"
      },
      "url": "https://api.github.com/repos/beartype/beartype/git/commits/6c2733e19768454bafd3f12d42a345cbe799f42d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/beartype/beartype/commits/6c2733e19768454bafd3f12d42a345cbe799f42d",
    "html_url": "https://github.com/beartype/beartype/commit/6c2733e19768454bafd3f12d42a345cbe799f42d",
    "comments_url": "https://api.github.com/repos/beartype/beartype/commits/6c2733e19768454bafd3f12d42a345cbe799f42d/comments",
    "author": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leycec",
      "id": 217028,
      "node_id": "MDQ6VXNlcjIxNzAyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217028?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leycec",
      "html_url": "https://github.com/leycec",
      "followers_url": "https://api.github.com/users/leycec/followers",
      "following_url": "https://api.github.com/users/leycec/following{/other_user}",
      "gists_url": "https://api.github.com/users/leycec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leycec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leycec/subscriptions",
      "organizations_url": "https://api.github.com/users/leycec/orgs",
      "repos_url": "https://api.github.com/users/leycec/repos",
      "events_url": "https://api.github.com/users/leycec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leycec/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "438fe7002883dea2e581d8aac94300b843658769",
        "url": "https://api.github.com/repos/beartype/beartype/commits/438fe7002883dea2e581d8aac94300b843658769",
        "html_url": "https://github.com/beartype/beartype/commit/438fe7002883dea2e581d8aac94300b843658769"
      }
    ]
  }
]
